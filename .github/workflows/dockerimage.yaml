name: Build, Publish, and Run Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./InvestmentPlatform/Dockerfile
          push: true
          tags: ghcr.io/casillas0905/investmentplatform:latest

  run:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull and run Docker image
        run: |
          # Pull the Docker image
          docker pull ghcr.io/casillas0905/investmentplatform:latest
          
          # Run the Docker container in detached mode
          docker run -d --name investmentplatform \
            -e TASTYTRADE_ACCOUNT_NUMBER=${{secrets.TASTYTRADE_ACCOUNT_NUMBER}} \
            -e TASTYTRADE_USERNAME=${{secrets.TASTYTRADE_USERNAME}} \
            -e TASTYTRADE_PASSWORD=${{secrets.TASTYTRADE_PASSWORD}} \
            ghcr.io/casillas0905/investmentplatform:latest
          
          # Wait for the container to be healthy
          timeout=60
          while [ $timeout -gt 0 ]; do
            status=$(docker inspect --format='{{json .State.Health.Status}}' investmentplatform)
            if [ "$status" = "\"healthy\"" ]; then
              echo "Container is healthy."
              break
            elif [ "$status" = "\"unhealthy\"" ]; then
              echo "Container failed to start properly."
              docker logs investmentplatform
              exit 1
            fi
            sleep 5
            timeout=$((timeout - 5))
          done
          
          if [ $timeout -le 0 ]; then
            echo "Container did not become healthy within the timeout period."
            docker logs investmentplatform
            docker stop investmentplatform
            exit 1
          fi
          
          # Optionally, you can stop the container after some operation
          sleep 60
          docker stop investmentplatform